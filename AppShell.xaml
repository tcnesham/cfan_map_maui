<Shell xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:CFAN.SchoolMap.Maui"
       xmlns:views="clr-namespace:CFAN.SchoolMap.Views"
       x:Class="CFAN.SchoolMap.Maui.AppShell"
       FlyoutBackgroundColor="White"
       FlyoutWidth="250">


    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.ForegroundColor" Value="{StaticResource BackgroundColor}" />
                <Setter Property="Shell.TitleColor" Value="White" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="White"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF"/>
                <Setter Property="Shell.TabBarTitleColor" Value="White"/>
            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->

            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource BackgroundColor}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <Shell.FlyoutHeader>
        <StackLayout HeightRequest="100" 
                     Padding="50,10,50,10">
            <Image 
                Source="logo.png"/>
        </StackLayout>
    </Shell.FlyoutHeader>
    
    <FlyoutItem Title="About">
        <ShellContent
            Route="AboutPage"
            ContentTemplate="{DataTemplate local:AboutPage}" />
    </FlyoutItem>

    <FlyoutItem
        Title="School Map"
        IsVisible="{Binding Repository.HasSchoolRoles}">
        <ShellContent
            Route="SchoolMapPage"
            ContentTemplate="{DataTemplate views:SchoolMapPage}"
            IsVisible="{Binding Repository.HasSchoolRoles}"/>
            </FlyoutItem>
    <FlyoutItem
        Title="School Statistics"
        IsVisible="{Binding Repository.HasSchoolRoles}">
        <ShellContent
            Route="SchoolStatisticsPage"
            ContentTemplate="{DataTemplate views:SchoolStatisticsPage}"
            IsVisible="{Binding Repository.HasSchoolRoles}"/>
    </FlyoutItem>
    <FlyoutItem
        Title="Outreach Map"
        IsVisible="{Binding Repository.HasMarketRoles}">
        <ShellContent
            Route="MarketMapPage"
            ContentTemplate="{DataTemplate views:MarketMapPage}"
            IsVisible="{Binding Repository.HasMarketRoles}"/>
    </FlyoutItem>
    <FlyoutItem
        Title="Administration"
        IsVisible="{Binding Repository.HasAdministrationRoles}">
        <ShellContent
            Route="AdminPage"
            ContentTemplate="{DataTemplate views:AdminPage}"
            IsVisible="{Binding Repository.HasAdministrationRoles}"/>
    </FlyoutItem>

    <!--<MenuItem Text="Calendar"
              Command="{Binding NavigateToCalendarCommand}"/>-->
    <MenuItem Text="Resources" />

    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <!--<MenuItem Text="Logout" StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked">
    </MenuItem>-->

    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <!--<TabBar>
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
    </TabBar>-->

    <!-- Optional Templates 
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid>ContentHere</Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>

    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    -->

</Shell>